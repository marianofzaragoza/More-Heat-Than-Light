* fix message receive check of entanglement
* figure out what to do after 1 time entanglement finishes playing
* DONE check if files exist before playing
* DONE convert framerate in conversion pipeline

* DONE video play related to temperature
* DONE multicast protocol
* reliability / boot (proper logo)
* DONE network
* DONE printer carol
  
* logging (temperatures)
* DONE remote control 
* DONE 2 thermometers on 1-wire bus 
* testing with actual videos
* DONE config file
* NOTNEEDED lightbox (only send)
* NOTNEEDED plymouth-reboot splash screen
* NOTNEEDED? fix alpha blend function (so its faster)
* NEEDSTESTING video interruption sync
* use live sync for timing video interruption
  * is the beat count the same on all machines???? check in aalink
  * interruption state machine
    - both nodes timestamp beats (keep track of last 2 beat timestamps)
    - 1 node sends interrupt message (after checking both temperatures) (with a proposal to start playing on beat # (2 beats in future))
    - both nodes start loading video
    - video starts playing on 2nd next full beat (based on message timestamp??) ( so there is always enough time)

* DONE time sync protocol (ntp or ptp)
* DONE sync communnication on ableton live sync
* logfile to recreate the printout (avideo#, bvideo#, atemp, btemp, state )
* DONE triggering scenes in ableton
* logging / graphing temperatures and videos
* DONE weird resolution / aspect ratio
* NOTNEEDED? updaterate temperature in video player
* DONE black bar projector under video ( in gtk?)
* DONE google sheet import
* DONE disable notifications (for example about updates)
* disable unnattended upgrades
* cleanup extra daemons on computers
* sequence numbers in messages (for debugging packet drops)
* quit program properly (quit doesn't work with the async / glib integration)
* FUTURE interrupting by using 3th player / smooth transition on interrupting
* log 
* DONE check and act on states / transitions
* DONE restart player on stuck video

